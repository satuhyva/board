{"version":3,"sources":["styled_components/AppContainer.ts","styled_components/AllColumnsContainer.ts","utils/getWindowInnerWidth.ts","styled_components/AppTitle.ts","styled_components/OneColumnContainer.ts","utils/getOneColumnWidth.ts","utils/constants.ts","styled_components/ColumnTitle.ts","types/Draggables.ts","styled_components/CardContainer.ts","styled_components/CardTitle.ts","components/Card.tsx","state/initialState.ts","state/AppContext.tsx","utils/useAppState.ts","utils/theme.ts","components/Column.tsx","styled_components/CreateNewTaskButton.ts","styled_components/CreateNewContainer.ts","styled_components/NewTaskInput.ts","components/CreateNewTask.tsx","styled_components/TrashBinContainer.ts","utils/trashBinDimensions.ts","components/TrashBin.tsx","styled_components/Info.ts","App.tsx","utils/getNextAvailableIdNumber.ts","state/reducer.ts","state/AppContextWithState.tsx","index.tsx"],"names":["AppContainer","styled","div","props","theme","colors","color4","AllColumnsContainer","window","innerWidth","AppTitle","h2","color1","OneColumnContainer","color","color3","toString","getOneColumnWidth","ColumnTitle","h3","Draggables","CardContainer","CardTitle","p","color2","Card","title","id","useDrag","type","item","collect","monitor","isDragging","drag","ref","style","opacity","data-testid","initialState","tasks","AppContext","createContext","state","dispatch","useAppState","useContext","createNewTask","newTask","data","moveTask","to","removeTask","Column","mode","useDrop","accept","drop","isActive","canDrop","isOver","colorProps","map","task","description","CreateNewTaskButton","button","CreateNewContainer","NewTaskInput","input","CreateNewTask","useState","showInput","setShowInput","newItem","setNewItem","handleCreateNew","value","onChange","event","target","onKeyPress","key","placeholder","onClick","TrashBinContainer","TrashBin","size","Info","h5","App","filter","getNextAvailableIdNumber","length","reduce","previous","current","reducer","action","Error","AppContextWithState","children","useReducer","Provider","ReactDOM","render","StrictMode","DndProvider","backend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.d90fe7e1.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n\nexport const AppContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: ${ props => props.theme.colors.color4 };\n    width: 100%;\n    height: 100%;\n`\n\n","import styled from 'styled-components'\nimport { getWindowInnerWidth } from '../utils/getWindowInnerWidth'\n\n\n\nexport const AllColumnsContainer = styled.div`\n    display: flex;\n    flex-direction: ${getWindowInnerWidth() < 550 ? 'column' : 'row'};\n    align-items: flex-start;\n    justify-content: center;\n`\n","export const getWindowInnerWidth = () => {\n    return window.innerWidth\n}","import styled from 'styled-components'\n\n\nexport const AppTitle = styled.h2`\n    color: ${ props => props.theme.colors.color1 };\n    font-family: Arial, Helvetica, sans-serif;\n    margin-bottom: 0;\n`\n","import styled from 'styled-components'\nimport { getOneColumnWidth } from '../utils/getOneColumnWidth'\n\n\n\nexport const OneColumnContainer = styled.div`\n    background-color: ${props => props.color ? props.color : props.theme.colors.color3};\n    width: ${getOneColumnWidth()};\n    flex: 1;\n    margin: 10px;\n    padding: 10px;\n    border-radius: 5px;\n`\n\n","import { MIN_ROW_VIEW_WIDTH, COLUMN_DIVIDER } from './constants'\n\nexport const getOneColumnWidth = () => {\n    const innerWidth = window.innerWidth\n    if (innerWidth < MIN_ROW_VIEW_WIDTH) {\n        return (innerWidth * 0.7).toString() + 'px'\n    }\n    return (window.innerWidth / COLUMN_DIVIDER).toString() + 'px'\n}","export const MIN_ROW_VIEW_WIDTH = 550\nexport const COLUMN_DIVIDER = 3.75","import styled from 'styled-components'\n\n\nexport const ColumnTitle = styled.h3`\n    color: ${ props => props.theme.colors.color1 };\n    font-family: Arial, Helvetica, sans-serif;\n    text-align: center;\n`","export const Draggables = {\n    TASK: 'task'\n}","import styled from 'styled-components'\n\n\nexport const CardContainer = styled.div`\n    background-color: ${props => props.theme.colors.color4};\n    border-radius: 5px;\n`\n","import styled from 'styled-components'\n\n\nexport const CardTitle = styled.p`\n    background-color: ${ props => props.theme.colors.color4 };\n    border-radius: 5px;\n    border: none;\n    color: ${ props => props.theme.colors.color2 };\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 10px;\n    overflow: hidden;\n`","import React from 'react'\nimport { CardContainer } from '../styled_components/CardContainer'\nimport { CardTitle } from '../styled_components/CardTitle'\nimport { useDrag } from 'react-dnd'\nimport { Draggables } from '../types/Draggables'\n\n\ntype ColumnProps = {\n    title: string,\n    id: number,\n}\n\nconst Card: React.FC<ColumnProps> = ({ title, id }) => {\n\n    const [ { isDragging }, drag] = useDrag(() => ({\n        type: Draggables.TASK,\n        item: { id: id },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging()\n        })\n    }))\n\n    return (\n        <CardContainer\n            ref={drag}\n            style={{ opacity: isDragging ? 0.25 : 1}}\n            data-testid={`card-${id}`}\n        >\n            <CardTitle>\n                {title}\n            </CardTitle>\n        </CardContainer>\n    )\n}\n\n\nexport default Card","import { AppState } from '../types/AppState'\n\n\nexport const initialState: AppState = {\n    tasks: [],\n}","import { createContext } from 'react'\nimport { initialState } from './initialState'\nimport { Context } from '../types/Context'\n\n\nexport const AppContext = createContext<Context>({ \n    state: initialState,\n    dispatch: () => null,\n})","import { useContext } from 'react'\nimport { AppContext } from '../state/AppContext'\nimport { Task } from '../types/Task'\nimport { Mode } from '../types/Mode'\n\n\ntype UseAppState = {\n    tasks: Task[],\n    createNewTask: (newTask: string) => void,\n    moveTask: (id: number, to: Mode) => void,\n    removeTask: (id: number) => void,\n}\n\nexport const useAppState = (): UseAppState => {\n\n\n    const { state, dispatch } = useContext(AppContext)\n\n    const createNewTask = (newTask: string) => {\n        dispatch({ type: 'ADD_NEW', data: newTask})\n    }\n\n    const moveTask = (id: number, to: Mode) => {\n        dispatch({ type: 'MOVE_TASK', data: { id: id, to: to }})\n    }\n\n    const removeTask = (id: number) => {\n        dispatch({ type: 'REMOVE_TASK', data: id })\n    }\n\n    return {\n        tasks: state.tasks,\n        createNewTask,\n        moveTask,\n        removeTask\n    }\n\n}","export const theme = {\n    colors: {\n        color1: '#132C33',\n        color2: '#126E82',\n        color3: '#51C4D3',\n        color4: '#D8E3E7',\n    }\n}\n\n\n\n\n","import React from 'react'\nimport { OneColumnContainer } from '../styled_components/OneColumnContainer'\nimport { ColumnTitle } from '../styled_components/ColumnTitle'\nimport { useDrop } from 'react-dnd'\nimport { Draggables } from '../types/Draggables'\nimport { Mode } from '../types/Mode'\nimport { Task } from '../types/Task'\nimport Card from './Card'\nimport { useAppState } from '../utils/useAppState'\nimport { theme } from '../utils/theme'\n\n\n\nexport type ColumnProps = {\n    title: string,\n    mode: Mode,\n    tasks: Task[]\n}\n\nconst Column: React.FC<ColumnProps> = ({ title, mode, tasks }) => {\n\n    const { moveTask } = useAppState()\n\n    const [ {isActive}, drop] = useDrop(() => ({\n        accept: Draggables.TASK,\n        drop: (item) => moveTask((item as { id: number }).id, mode),\n        collect: monitor => ({\n            isActive: monitor.canDrop() && monitor.isOver(),\n        }),\n    }), [])\n\n    const colorProps = isActive ? { color: theme.colors.color2 } : {}\n\n    return (\n        <OneColumnContainer\n            ref={drop}\n            {...colorProps} \n            data-testid={`column-${title}`}\n        >\n            <ColumnTitle>\n                {title}\n            </ColumnTitle>\n            {tasks.map(task => {\n                return (\n                    <Card key={task.id} title={task.description} id={task.id}/>\n                )\n            })}\n        </OneColumnContainer>\n    )\n}\n\n\nexport default Column\n\n","import styled from 'styled-components'\n\n\nexport const CreateNewTaskButton = styled.button`\n    background-color: ${ props => props.theme.colors.color2 };\n    color: ${ props => props.theme.colors.color4 };\n    font-size: 1em;\n    border-radius: 3px;\n    border: none;\n    padding: 10px;\n    margin: 20px;\n\n    &:hover {\n        background-color: ${ props => props.theme.colors.color1 };\n        color: ${ props => props.theme.colors.color4 };\n    }\n`\n","import styled from 'styled-components'\n\n\nexport const CreateNewContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 10px;\n`","import styled from 'styled-components'\n\n\nexport const NewTaskInput = styled.input`\n    background-color: ${ props => props.theme.colors.color4 };\n    color: ${ props => props.theme.colors.color2 };\n    font-size: 1em;\n    width: 100%;\n    border-radius: 3px;\n    border-width: 1px;\n    border: solid;\n    padding: 10px;\n`\n","import React, { useState } from 'react'\nimport { CreateNewTaskButton } from '../styled_components/CreateNewTaskButton'\nimport { CreateNewContainer } from '../styled_components/CreateNewContainer'\nimport { NewTaskInput } from '../styled_components/NewTaskInput'\n\n\n\nexport type CreateNewTaskProps = {\n    createNewTask: (newTask: string) => void\n}\n\nconst CreateNewTask: React.FC<CreateNewTaskProps> = ({ createNewTask }) => {\n\n    const [showInput, setShowInput] = useState(false)\n    const [newItem, setNewItem] = useState('')\n\n\n    const handleCreateNew = () => {\n        if (newItem === '') return\n        createNewTask(newItem)\n        setShowInput(false)\n        setNewItem('')\n    }\n\n    const handleKeyboardPress = (event: React.KeyboardEvent<HTMLInputElement> | undefined) => {\n        if (event && event.key === 'Enter') {\n            handleCreateNew()\n        }\n    }\n\n    if (!showInput) {\n        return (\n            <CreateNewTaskButton onClick={() => setShowInput(true)}>\n                CREATE NEW TASK\n            </CreateNewTaskButton>)\n    }\n\n    return (\n        <CreateNewContainer >\n            <NewTaskInput\n                value={newItem}\n                onChange={(event) => setNewItem(event.target.value)}\n                onKeyPress={handleKeyboardPress}\n                placeholder='Type the task here ...'\n            />\n            <div>\n                <CreateNewTaskButton onClick={() => setShowInput(false)}>\n                    CANCEL\n                </CreateNewTaskButton>   \n                <CreateNewTaskButton onClick={handleCreateNew}>\n                    CREATE\n                </CreateNewTaskButton>             \n            </div>\n\n\n        </CreateNewContainer>\n    )\n}\n\n\nexport default CreateNewTask","import styled from 'styled-components'\nimport { getTrashBinWidth, getTrashBinHeight } from '../utils/trashBinDimensions'\n\n\n\nexport const TrashBinContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: ${props => props.color ? props.color : props.theme.colors.color1};\n    width: ${getTrashBinWidth()};\n    height: ${getTrashBinHeight()};\n    max-height: 40px;\n    border-radius: 5px;\n    margin: 10px;\n    padding: 10px;\n`\n\n","import { COLUMN_DIVIDER } from './constants'\n\nexport const getTrashBinWidth = () => {\n    return (window.innerWidth  / COLUMN_DIVIDER).toString() + 'px'\n}\n\nexport const getTrashBinHeight = () => {\n    return (window.innerWidth  / 15).toString() + 'px'\n}\n","import React from 'react'\nimport { TrashBinContainer } from '../styled_components/TrashBinContainer'\nimport { useDrop } from 'react-dnd'\nimport { Draggables } from '../types/Draggables'\nimport { useAppState } from '../utils/useAppState'\nimport { Trash } from '@styled-icons/ionicons-outline'\nimport { theme } from '../utils/theme'\n\n\nconst TrashBin: React.FC = () => {\n\n    const { removeTask } = useAppState()\n\n    const [{ isActive }, drop] = useDrop(() => ({\n        accept: Draggables.TASK,\n        drop: (item) => removeTask((item as { id: number }).id),\n        collect: monitor => ({\n            isActive: monitor.canDrop() && monitor.isOver(),\n        }),\n    }), [])\n\n    const colorProps = isActive ? { color: theme.colors.color2 } : {}\n\n    return (\n        <TrashBinContainer\n            ref={drop}\n            {...colorProps} \n            data-testid='trash-bin'\n        >\n            <Trash color={theme.colors.color4} size='100%'/>\n        </TrashBinContainer>\n    )\n}\n\n\nexport default TrashBin\n","import styled from 'styled-components'\n\n\nexport const Info = styled.h5`\n    color: ${ props => props.theme.colors.color1 };\n    font-family: Arial, Helvetica, sans-serif;\n    margin: 0;\n`","import React from 'react'\nimport { AppContainer } from './styled_components/AppContainer'\nimport { AllColumnsContainer } from './styled_components/AllColumnsContainer'\nimport { AppTitle } from './styled_components/AppTitle'\nimport Column from './components/Column'\nimport CreateNewTask from './components/CreateNewTask'\nimport { useAppState } from './utils/useAppState'\nimport TrashBin from './components/TrashBin'\nimport { Info } from './styled_components/Info'\n\nfunction App() {\n\n    const { tasks, createNewTask } = useAppState()\n\n\n    return (\n        <AppContainer>\n            <AppTitle>TASK BOARD</AppTitle>\n            <Info>a wannabe trello app</Info>\n            <Info>{\"just drag'n'drop your tasks around\"}</Info>\n            <CreateNewTask createNewTask={createNewTask}/>\n            <AllColumnsContainer>\n                <Column title='WAITING' mode='waiting' tasks={tasks.filter(task => task.mode ==='waiting')}/>\n                <Column title='ONGOING' mode='ongoing' tasks={tasks.filter(task => task.mode ==='ongoing')}/>\n                <Column title='DONE' mode='done' tasks={tasks.filter(task => task.mode ==='done')}/>\n            </AllColumnsContainer>\n            <TrashBin/>\n        </AppContainer>\n    )\n}\n\nexport default App\n","import { AppState } from '../types/AppState'\nimport { Task } from '../types/Task'\n\nexport const getNextAvailableIdNumber = (state: AppState): number => {\n    if (state.tasks.length === 0) return 1\n    const reducer = (previous: Task, current: Task) => current.id > previous.id ? current : previous \n    const id = state.tasks.reduce(reducer).id + 1\n    return id\n}\n\n\n\n\n\n\n\n\n","import { Action } from '../types/Action'\nimport { AppState } from '../types/AppState'\nimport { getNextAvailableIdNumber } from '../utils/getNextAvailableIdNumber'\n\n\n\nexport const reducer = (state: AppState, action: Action): AppState => {\n\n    switch (action.type) {\n    case 'ADD_NEW':\n        return { ...state, \n            tasks: [\n                ...state.tasks, \n                { \n                    id: getNextAvailableIdNumber(state), \n                    mode: 'waiting', \n                    description: action.data \n                }\n            ] \n        }\n    case 'REMOVE_TASK':\n        return { ...state,  tasks: state.tasks.filter(task => task.id !== action.data)}\n    case 'MOVE_TASK':\n        return { ...state, tasks: state.tasks.map(task => {\n            if (task.id === action.data.id) {\n                task.mode = action.data.to\n            }\n            return task\n        })}\n    default:\n        throw new Error(`Action ${action} not implemented!`)\n    }\n}","import React, { useReducer } from 'react'\nimport { AppContext } from './AppContext'\nimport { initialState } from './initialState'\nimport { reducer } from './reducer'\n\n\n\nconst AppContextWithState: React.FC = ({ children })=> {\n\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    return(\n        <AppContext.Provider value={{ state, dispatch }}>\n            {children}\n        </AppContext.Provider>\n\n    )\n}\n\nexport default AppContextWithState\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { ThemeProvider} from 'styled-components'\nimport { theme } from './utils/theme'\nimport AppContextWithState from './state/AppContextWithState'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <DndProvider backend={HTML5Backend}>\n            <ThemeProvider theme={theme}>\n                <AppContextWithState>\n                    <App/>\n                </AppContextWithState>\n            </ThemeProvider>\n        </DndProvider>\n\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}